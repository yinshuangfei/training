This is a thread pool demo.

什么线程池，为什么要使用线程池？下面是一个比喻。
阶段一、一个医院，每天面对成千上万的病人，处理方式是：来一个病
人找来一个医生处理，处理完了医生也走了。当看病时间较短的时候，
医生来去的时间，显得尤为费时了。
阶段二、医院引进了线程池的概念。设置门诊，把医生全派出去坐诊，
病人来看病先挂号排队，医生根据病人队列顺序依次处理各个病人，这
样就省去医生来来去去的时间了。但是，很多时候病人不多，医生却很
多导致很多医生空闲浪费水电资源撒。
阶段三、医院引进了可伸缩性线程池的概念，如阶段二，但是门诊一开
始只派出了部分医生，但是增加了一个领导，病人依旧是排队看病，领
导负责协调整个医院的医生。当病人很多医生忙不过来的时候，领导就
去多叫几个医生来帮忙；当病人不多医生太多的时候，领导就叫一些医
生回家休息去免得浪费医院资源。

阶段三就是一个线程池的例子。

线程池包括：n个执行任务的线程，一个任务队列，一个管理线程
1、预先启动一些线程，线程负责执行任务队列中的任务，当队列空时，
线程挂起。
2、调用的时候，直接往任务队列添加任务，并发信号通知线程队列非空。
3、管理线程负责监控任务队列和系统中的线程状态，当任务队列为空，
线程数目多且很多处于空闲的时候，便通知一些线程退出以节约系统资
源；当任务队列排队任务多且线程都在忙，便负责再多启动一些线程来
执行任务，以确保任务执行效率。

==========================================

关键：线程池控制器，线程池控制器用来对线程池进行控制管理，描述
当前线程池的最基本信息，包括任务的投递，线程池状态的更新与查询，
线程池的销毁等。

解释：
1) 图中的线程池中的"空闲"和"执行"分别表示空闲线程和执行线程，空闲线程指在正在等待任务的线程，
 同样执行线程指正在执行任务的线程，  两者是相互转换的。当用户投递任务过来则用空闲线程来执行
 该任务，且空闲线程状态转换为执行线程；当任务执行完后，执行线程状态转变为空闲线程。
2) 创建线程池时，正常情况会创建一定数量的线程，  所有线程初始化为空闲线程，线程阻塞等待用户
 投递任务。
3) 用户投递的任务首先放入等待队列queue_head 链表中, 如果线程池中有空闲线程则放入空闲线程中
 执行，否则根据条件选择继续等待空闲线程或者新建一个线程来执行，新建的线程将放入线程池中。
4) 执行的任务会从等待队列中脱离，并在任务执行完后释放任务结点worker_t 

在初始化创建线程时所有线程都全部阻塞在pthread_cond_wait()处
此时的线程就为空闲线程，也就是线程被挂起，当收到信号并取得互斥锁时，     表明任务投递过来
则获取等待队列里的任务结点并执行回调函数；  函数执行结束后回去判断当前等待队列是否还有任
务，有则接下去执行，否则重新阻塞回到空闲线程状态。

https://www.cnblogs.com/zhaoosheLBJ/p/9337291.html
